name: CoverageTests
on:
  push:
    branches:
      - "*"
  pull_request: 
    branches:
      - main
jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkhout Repository
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with: 
          dotnet-version: 9.0.x
      - name: Install coverlet.console
        run: dotnet tool install --global coverlet.console
      - name: Restore Solution
        run: dotnet restore Stella.Ergosfare.sln
      - name: Run Coverage tests and collect coverage
        run: |
          dotnet test Stella.Ergosfare.sln `
            --settings coverlet.runsettings
            --no-build `
            /p:CollectCoverage=true `
            /p:CollectOutput=./coverage/coverage.json `
            /p:CollectOutputFormat=cobertura `
            /p:MergeWith=./coverage/coverage.json `
            /p:UseAppHost=false `
            /p:VSTestLogger=
      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool
      - name: Generate Coverage Report
        run: eportgenerator -reports:coverage/coverage.json -targetdir:coverage-report -reporttypes:Html
      - name: Fail if coverage < 90%
          run: |
            COVERAGE=$(reportgenerator -reports:coverage/coverage.json -reporttypes:TextSummary -targetdir:coverage-report-summary | grep -Po 'Total\s*:\s*\K\d+(\.\d+)?')
            echo "Total coverage: $COVERAGE%"
            COVERAGE_INT=${COVERAGE%.*}
            if [ "$COVERAGE_INT" -lt 90 ]; then
              echo "Coverage $COVERAGE% is below 90%"
              exit 1
            fi