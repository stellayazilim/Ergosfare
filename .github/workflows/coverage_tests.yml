name: .NET Unit & Coverage Tests

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - 'coverage.svg'

jobs:
  test-and-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Install Coverlet global tool
        run: dotnet tool install --global coverlet.console

      - name: Restore dependencies
        run: dotnet restore Stella.Ergosfare.sln

      - name: Run Unit & Coverage Tests
        run: |
          mkdir -p coverage
          dotnet test Stella.Ergosfare.sln \
            --settings coverlet.runsettings \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=cobertura \
            /p:CoverletOutput=coverage/$(basename $(pwd)).cobertura.xml \
            --logger "trx;LogFileName=TestResults.trx"

      - name: Merge coverage reports
        run: |
          mkdir -p coverage
          COVERAGE_FILES=$(find ./test -type f -name 'coverage.cobertura.xml')
          COVERAGE_FILES_ARGS=""
          for f in $COVERAGE_FILES; do
            COVERAGE_FILES_ARGS="$COVERAGE_FILES_ARGS --merge-with $f"
          done
          # Merge into single coverage
          coverlet ./test/Ergosfare.Core.Test/bin/Debug/net9.0/Ergosfare.Core.Test.dll \
            --target "dotnet" \
            --targetargs "test ./test/Ergosfare.Core.Test/Ergosfare.Core.Test.csproj" \
            $COVERAGE_FILES_ARGS \
            --output ./coverage/coverage.cobertura.xml \
            --format cobertura

      - name: Fail if coverage < 90%
        run: |
          COVERAGE=$(grep -oP '(?<=line-rate=")[0-9.]+' coverage/coverage.cobertura.xml)
          echo "Total line coverage: $COVERAGE"
          COVERAGE_INT=$(echo "$COVERAGE * 100 / 1" | bc)
          if [ "$COVERAGE_INT" -lt 90 ]; then
            echo "Coverage $COVERAGE% is below 90%!"
            exit 1
          fi

      - name: Generate coverage badge
        uses: action-badges/cobertura-coverage-xml-badges@0.3.1
        with:
          file-name: coverage.svg
          badge-branch: ${{ github.ref_name }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-file-name: ./coverage/coverage.cobertura.xml

      - name: Commit coverage badge
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add coverage.svg
          git commit -m "chore: update coverage badge [skip ci]" || echo "Nothing to commit"
          git push origin ${{ github.ref_name }}